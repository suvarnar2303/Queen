package tetscase;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.Reporter;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;

import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.service.local.AppiumDriverLocalService;
import io.appium.java_client.service.local.AppiumServiceBuilder;

public class Base_test {

	AndroidDriver driver;
	AppiumDriverLocalService service;
	ExtentReports extent;
	ExtentTest logger;
	@BeforeSuite
	public void configaration() throws MalformedURLException, InterruptedException {
		ExtentSparkReporter ex=new ExtentSparkReporter(System.getProperty("user.dir")+"\\Reports\\ravi.html");
		ex.config().setDocumentTitle("Automation Appium testing");
		ex.config().setReportName("mobileTesting result");
	         extent = new ExtentReports();
	        extent.attachReporter(ex);
	        extent.setSystemInfo("Ravi", "automation TestEnginerr");
	        
	        
	        
		 service=new AppiumServiceBuilder().withAppiumJS( new File("C:\\Users\\Suvarna R\\AppData\\Roaming\\npm\\node_modules\\appium\\build\\lib\\main.js"))
				.withIPAddress("127.0.0.1").usingPort(4723).build();
		service.start();
		Reporter.log("appium server is started", true);
		DesiredCapabilities cap=new DesiredCapabilities();
		cap.setCapability("platformName","Android" );
		cap.setCapability("deviceName", "Samsung a50");
		cap.setCapability("platformVesrion", "11");
		cap.setCapability("udid", "RZ8M90QTAVH");
		cap.setCapability("app", "C:\\Users\\Suvarna R\\Documents\\webAutomation\\Appium\\src\\main\\java\\resourses\\ApiDemos-debug.apk");
	     driver=new AndroidDriver(new URL("http://127.0.0.1:4723/wd/hub"), cap);
	     Reporter.log("driver is setting and stareted to launch", true);
	     
	     
	}
	@AfterSuite
	public void StopServer()
	{
		driver.close();
		Reporter.log("driver is closed", true);
		service.stop();
		
	}

	}


